(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{358:function(t,s,a){t.exports=a.p+"assets/img/img02.382e535d.png"},370:function(t,s,a){"use strict";a.r(s);var e=a(44),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"flex-弹性布局"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-弹性布局"}},[t._v("#")]),t._v(" Flex 弹性布局")]),t._v(" "),e("blockquote",[e("p",[t._v("布局的传统解决方案，基于盒状模型，依赖 display 属性 + position 属性 + float 属性。它对于那些特殊布局非常不方便，比如，垂直居中就不容易实现。")])]),t._v(" "),e("p",[t._v("2009 年，W3C 提出了一种新的方案----Flex 布局，可以简便、完整、响应式地实现各种页面布局。IE10+支持")]),t._v(" "),e("h2",{attrs:{id:"flex-布局是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-布局是什么"}},[t._v("#")]),t._v(" Flex 布局是什么？")]),t._v(" "),e("p",[t._v('Flex 是 Flexible Box 的缩写，意为"弹性布局"，用来为盒状模型提供最大的灵活性。')]),t._v(" "),e("p",[t._v("flexbox：布局是一维布局方式 按行 或 按列排列，解决了 元素分布、对齐、和响应式的问题")]),t._v(" "),e("p",[t._v("任何一个容器都可以指定为 Flex 布局。"),e("strong",[t._v("设为 Flex 布局以后，子元素的 float、clear 和 vertical-align 属性将失效。")])]),t._v(" "),e("p",[e("strong",[t._v("设置 display: flex 之后默认子元素会按行排列")])]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br")]),e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 行内元素也可以使用Flex布局。*/")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inline-flex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"容器的属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#容器的属性"}},[t._v("#")]),t._v(" 容器的属性")]),t._v(" "),e("h3",{attrs:{id:"flex-direction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-direction"}},[t._v("#")]),t._v(" flex-direction")]),t._v(" "),e("p",[e("strong",[t._v("flex-direction 属性决定主轴的方向（即容器的排列方向）。")])]),t._v(" "),e("p",[t._v("布局方向：")]),t._v(" "),e("ul",[e("li",[t._v("row（默认值）：主轴为水平方向，起点在左端。")]),t._v(" "),e("li",[t._v("row-reverse：主轴为水平方向，起点在右端。")]),t._v(" "),e("li",[t._v("column：主轴为垂直方向，起点在上沿。")]),t._v(" "),e("li",[t._v("column-reverse：主轴为垂直方向，起点在下沿。")])]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-direction")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" row | row-reverse | column | column-reverse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"flex-wrap-属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-wrap-属性"}},[t._v("#")]),t._v(" flex-wrap 属性")]),t._v(" "),e("p",[e("strong",[t._v("默认情况下，项目都排在一条线（又称”轴线”）上。flex-wrap 属性定义，如果一条轴线排不下，如何换行。")])]),t._v(" "),e("p",[t._v("换行规则：")]),t._v(" "),e("ul",[e("li",[t._v("nowrap 不换行，子元素等分 (默认)")]),t._v(" "),e("li",[t._v("wrap 自动换行")]),t._v(" "),e("li",[t._v("wrap-reverse 换行，逆序")])]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-wrap")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nowrap | wrap | wrap-reverse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("img",{attrs:{src:a(358)}}),t._v(" "),e("h3",{attrs:{id:"flex-flow-属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-flow-属性"}},[t._v("#")]),t._v(" flex-flow 属性")]),t._v(" "),e("p",[e("strong",[t._v("flex-flow 属性是用于同时设置 flex-direction 和 flex-wrap 属性的简写属性")])]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-flow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" row wrap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"justify-content-属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#justify-content-属性"}},[t._v("#")]),t._v(" justify-content 属性")]),t._v(" "),e("p",[e("strong",[t._v("justify-content 水平对齐方式")])]),t._v(" "),e("ul",[e("li",[t._v("justify-content:flex-start; 默认 靠左对齐")]),t._v(" "),e("li",[t._v("justify-content:flex-end; 靠右对齐")]),t._v(" "),e("li",[t._v("justify-content: center; 居中")]),t._v(" "),e("li",[t._v("justify-content:space-evenly; 平分空间")]),t._v(" "),e("li",[t._v("justify-content:space-between; 两端对齐")]),t._v(" "),e("li",[t._v("justify-content:space-around; 平均分布在该行上，两边留有一半的间隔空间")])]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("justify-content")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" center"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"align-items-属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#align-items-属性"}},[t._v("#")]),t._v(" align-items 属性")]),t._v(" "),e("p",[e("strong",[t._v("align-items 属性用于垂直对齐 flex 项目")])]),t._v(" "),e("ul",[e("li",[t._v("center 值将 flex 项目在容器中间对齐")]),t._v(" "),e("li",[t._v("flex-start 值将 flex 项目在容器顶部对齐")]),t._v(" "),e("li",[t._v("flex-end 值将弹性项目在容器底部对齐")]),t._v(" "),e("li",[t._v("stretch 值拉伸 flex 项目以填充容器 (默认值)")]),t._v(" "),e("li",[t._v("baseline 值使 flex 项目基线对齐")])]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-items")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" center | flex-end | flex-start"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"align-content-属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#align-content-属性"}},[t._v("#")]),t._v(" align-content 属性")]),t._v(" "),e("p",[e("strong",[t._v("align-content 属性用于对齐弹性线")])]),t._v(" "),e("ul",[e("li",[t._v("space-between 值显示的弹性线之间有相等的间距")]),t._v(" "),e("li",[t._v("space-around 值显示弹性线在其之前、之间和之后带有空格")]),t._v(" "),e("li",[t._v("stretch 值拉伸弹性线以占据剩余空间（默认）")]),t._v(" "),e("li",[t._v("center 值在容器中间显示弹性线")]),t._v(" "),e("li",[t._v("flex-start 值在容器开头显示弹性线")]),t._v(" "),e("li",[t._v("flex-end 值在容器的末尾显示弹性线")])]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* \n  只在两种情况下有效果：\n    ① 子项多行且 flex 容器高度固定 \n    ② 子项单行，flex 容器高度固定且设置了 flex-wrap:wrap;\n  */")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 600px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-wrap")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" wrap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-content")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" center"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"flex-子元素-项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-子元素-项目"}},[t._v("#")]),t._v(" flex 子元素（项目）")]),t._v(" "),e("ul",[e("li",[t._v("order 属性规定 flex 项目的顺序。")]),t._v(" "),e("li",[t._v("flex-grow 属性规定某个 flex 项目相对于其余 flex 项目将增长多少")]),t._v(" "),e("li",[t._v("flex-basis 属性规定 flex 项目的初始长度")]),t._v(" "),e("li",[t._v("flex 属性是 flex-grow、flex-shrink 和 flex-basis 属性的简写属性。")])]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0 0 200px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"align-self-属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#align-self-属性"}},[t._v("#")]),t._v(" align-self 属性")]),t._v(" "),e("ul",[e("li",[t._v("align-self 属性规定弹性容器内所选项目的对齐方式。")]),t._v(" "),e("li",[t._v("align-self 属性将覆盖容器的 align-items 属性所设置的默认对齐方式。")])]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 子项目中使用 */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-self")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start | flex-end"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" // 在容器顶部或者底部对齐所选的弹性项目。\n")])])]),e("h2",{attrs:{id:"align-items-和-align-content-属性的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#align-items-和-align-content-属性的区别"}},[t._v("#")]),t._v(" align-items 和 align-content 属性的区别")]),t._v(" "),e("ol",[e("li",[t._v("align-items 属性是针对单独的每一个 flex 子项起作用，它的基本单位是每一个子项，在所有情况下都有效果（当然要看具体的属性值）。")]),t._v(" "),e("li",[t._v("align-content 属性是将 flex 子项作为一个整体起作用，它的基本单位是子项构成的行，只在两种情况下有效果：① 子项多行且 flex 容器高度固定 ② 子项单行，flex 容器高度固定且设置了 flex-wrap:wrap;")])]),t._v(" "),e("p",[e("strong",[t._v("总结： align-items 属性是针对于单独每一个 flex 子项起效果的，而 align-content 的属性是将 flex 子项作为一个整体起作用且需要多行或者有固定的高度。")])])])}),[],!1,null,null,null);s.default=n.exports}}]);